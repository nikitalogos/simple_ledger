grammar text_parser
  statements <- statement ("\n" statement)* %make_statements
  statement <- @space* transaction @space* %make_statement

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~transaction~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  transaction <- (label space+)?    (date_expr space+)?   (account_expr space+)*     (amount_expr space+)?     title

  label <- noname_label / named_label
  noname_label <- ([-+*] / [\d]+ ".") <NonameLabel>
  named_label <- var_name "." <NamedLabel>

  date_expr <- date_segment (@date_separator date_segment){0,2}
  date_segment <- [\d]+
  date_separator <- [-./_]

  account_expr <- account space+ @> space+ account
  account <- [^\s\d>] [^\s>]* / ""

  amount_expr <- amount multiplier? space+ currency?
  amount <- \d+
  muliplier <- k | m | ""
  currency <- [a-z]{3}

  title <- title_segment (space* title_segment)* %make_title
  title_segment <- meta / word_plus

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~meta~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  meta <- key_value <Meta>

  key_value <- key ":" value
  key <- "repeat"
  # here we make closing quote optional to prevent syntax error
  value <- @["] (!["\n] .)* @["]?  /  @['] (!['\n] .)* @[']?  /  (![ \n\t'"] .)*

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~low level~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  tab <- "\t" / "    "
  space <- [^\S\r\n]
  word_plus <- (![\s] .)+
  var_name <- [A-Za-z] [A-Za-z0-9_]*